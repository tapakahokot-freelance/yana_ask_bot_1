import asyncio
import re

from aiogram import types
from aiogram.dispatcher import FSMContext

from settings import settings
from db import User

from services import answer_photo, answer_file
import callbacks, states, filters, services
from datetime import datetime as dt


@settings.dp.message_handler(commands=["start"])
async def start_cmd(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç, –±—É–¥—É—â–∏–π —Å—Ç—É–¥–µ–Ω—Ç –≤—É–∑–∞ –º–µ—á—Ç—ã!\n"
        "–†–µ—à–µ–Ω–∏–µ –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –∑–∞—Ä—É–±–µ–∂–Ω—ã–π –í–£–ó –ï–≤—Ä–æ–ø—ã, –ê–∑–∏–∏ –∏–ª–∏ –°–®–ê - –æ–¥–Ω–æ –∏–∑ –ª—É—á—à–∏—Ö —Ç–≤–æ–∏—Ö —Ä–µ—à–µ–Ω–∏–π üî• "
        "–Ø –≤–µ—Ä—é, —á—Ç–æ —É —Ç–µ–±—è –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è, –∏ —Ç—ã —Å–º–æ–∂–µ—à—å –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å —Å–≤–æ—é –º–µ—á—Ç—É!"
    )
    await answer_photo(
        message=message,
        file_key='day_1_step_2',
        caption="–°–µ–π—á–∞—Å —Ç—ã –≤ –∏–≥—Ä–æ–≤–æ–π –≤–æ—Ä–æ–Ω–∫–µ –æ—Ç C.Academy, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–ª–∞ –º–Ω–µ –∏ –¥—Ä—É–≥–∏–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –∏—Ö –≤—É–∑—ã "
                "–º–µ—á—Ç—ã –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π –ø–æ —Å—Ç–∏–ø–µ–Ω–¥–∏–∏!\n"
                "–¢–æ—Ç, –∫—Ç–æ –ø—Ä–æ–π–¥—ë—Ç –≤—Å–µ –¥–æ –∫–æ–Ω—Ü–∞ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç –≤—Å–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è - –ø–æ–ª—É—á–∏—Ç –Ω–∞—à–∏ –ø–æ–¥–∞—Ä–∫–∏ –≤ –≤–∏–¥–µ "
                "—á–µ–∫-–ª–∏—Å—Ç–æ–≤ –∏ –≥–∞–π–¥–æ–≤ –ø–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–ø-100 —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤ –º–∏—Ä–∞!"
    )
    await asyncio.sleep(7)
    await answer_photo(
        message=message,
        file_key='day_1_step_3',
        caption="–ü—Ä–æ—Ö–æ–¥–∏, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!"
    )
    await message.answer(
        "–ö—Ç–æ-–Ω–∏–±—É–¥—å –∑–Ω–∞–µ—Ç, —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å?)",
        reply_markup=callbacks.ok_kb(day=1, step=3)
    )


@settings.dp.callback_query_handler(callbacks.ok_data().filter(day='1', step='3'))
async def ok_day_1_step_4(call: types.CallbackQuery):
    await answer_photo(
        message=call.message,
        file_key='day_1_step_4',
        caption="–¢–æ–≥–¥–∞ –±—É–¥–µ–º –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –±—ã—Å—Ç—Ä–æ"
    )
    await call.message.answer(
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ë–∞–¥–¥–∏, –∏ —è —Ç–≤–æ–π –Ω–∞–ø–∞—Ä–Ω–∏–∫. –°–µ–π—á–∞—Å –º—ã –±—É–¥–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—É—é –º–∏—Å—Å–∏—é, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø "
        "–∫ –Ω–∞—à–∏–º —Å–æ–∫—Ä–æ–≤–∏—â–∞–º, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∂–¥—É—Ç —Ç–µ–±—è –Ω–∞ —ç—Ç–æ–º –ø—É—Ç–∏ –∏ –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ!"
    )
    await call.message.answer(
        "–û–±–µ—â–∞–µ—à—å –¥–æ–π—Ç–∏ –¥–æ –∫–æ–Ω—Ü–∞?",
        reply_markup=callbacks.ok_kb(day=1, step=4)
    )


@settings.dp.callback_query_handler(callbacks.ok_data().filter(day='1', step='4'))
async def ok_day_1_step_5(call: types.CallbackQuery):
    await call.message.answer("–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!")
    await call.message.answer(
        "–ê —è –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é, —á—Ç–æ —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π "
        "–ø–æ —Å—Ç–∏–ø–µ–Ω–¥–∏–∏ –¥–∞–∂–µ –µ—Å–ª–∏ —Å–µ–π—á–∞—Å:\n\n"
        "‚ùå –ù–µ –∑–Ω–∞–µ—à—å, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å\n"
        "‚ùå –ë–æ–∏—à—å—Å—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å\n"
        "‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –¥–µ–Ω–µ–≥\n"
        "‚ùå –¢–≤–æ–∏ –æ—Ü–µ–Ω–∫–∏ –¥–∞–ª–µ–∫–∏ –æ—Ç –∏–¥–µ–∞–ª—å–Ω—ã—Ö\n"
        "‚ùå –£ —Ç–µ–±—è –º–∞–ª–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π\n\n"
        "–≠—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å –∑–∞ —Å—á–µ—Ç:\n"
        "‚úÖ –Ω–∞—à–µ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–∑ 3 —à–∞–≥–æ–≤\n"
        "‚úÖ –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ\n"
        "‚úÖ 5-–ª–µ—Ç–Ω–µ–º—É –æ–ø—ã—Ç—É –∏ —Å–æ—Ç–Ω–∏ –∫–µ–π—Å–æ–≤\n"
        "‚úÖ —Ç–≤–æ–µ–º—É –±–æ–ª—å—à–æ–º—É –∂–µ–ª–∞–Ω–∏—é\n"
    )
    await asyncio.sleep(60)
    await answer_photo(
        message=call.message,
        file_key='day_1_step_5',
        caption="–î—É–º–∞–µ—à—å, –≤—Å–µ —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ?"
    )
    await call.message.answer("–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–æ–∫—Ä–æ–≤–∏—â–∞–º, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ—Å—Ç—å.")
    await call.message.answer("–£ —Ç–µ–±—è –º–∞–ª–æ –≤—Ä–µ–º–µ–Ω–∏, –¥–µ–π—Å—Ç–≤—É–π –±—ã—Å—Ç—Ä–æ.")
    await call.message.answer("–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞  - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ—Å—Ç—å!")

    state = states.Form.waiting_phone
    await state.set()


@settings.dp.message_handler(
    state=states.Form.waiting_phone,
    regexp=re.compile('^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$')
)
async def enter_phone_number(message: types.Message, user: User, state: FSMContext):
    await state.finish()

    user.phone_number = message.text
    user.save()

    await message.answer(
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞, –≤–æ—Ç —ç—Ç–æ –∫—Ä—É—Ç–æ–π –Ω–æ–º–µ—Ä! –ü–æ—ç—Ç–æ–º—É –¥–æ—Å—Ç—É–ø –∫ —É—Ä–æ–∫–∞–º –æ—Ç–∫—Ä—ã—Ç. "
        "–í—Å–µ–≥–æ –∑–∞ 2 —É—Ä–æ–∫–∞ —Ç—ã –ø–æ–π–º—ë—à—å –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω, –∫–∞–∫ –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –≤—É–∑ –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π –∏ "
        "–ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∏–ø–µ–Ω–¥–∏—é! –ë–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Å—Ö–µ–º. –ë–µ–∑ –∑–∞–ø—É—Ç–∞–Ω–Ω—ã—Ö —à–∞–≥–æ–≤. –ë–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞."
    )
    await message.answer(
        "–ñ–ú–ò –ù–ê –ö–ù–û–ü–ö–£ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ –≤–≤–æ–¥–Ω–æ–º—É —É—Ä–æ–∫—É",
        reply_markup=callbacks.link_kb('–°–°–´–õ–ö–ê', 'https://youtu.be/6idCQ_8itiI')
    )
    await message.answer(
        "–°–∫–æ—Ä–µ–µ —Å–º–æ—Ç—Ä–∏ 1—É—é —á–∞—Å—Ç—å –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –ø—Ä–æ –Ω–∞—à–∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–æ—Ü–µ—Å—Å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è.\n"
        "–î–∞–ª—å—à–µ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ üöÄ –∏ –ø–æ—Å—Ç–∞–≤—å –≥–∞–ª–æ—á–∫—É, –∫–æ–≥–¥–∞ –ø–æ—Å–º–æ—Ç—Ä–∏—à—å –µ–≥–æ.",
        reply_markup=callbacks.ok_kb(day=1, step=10)
    )


@settings.dp.message_handler(
    state=states.Form.waiting_phone,
    content_types=['any']
)
async def wrong_enter_phone_number(message: types.Message):
    await message.answer("–¢–∞–∫–∏–º–∏ —Ç–µ–º–ø–∞–º–∏ —Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ—à—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ—Å—Ç—å((\n–õ—É—á—à–µ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ :)")


@settings.dp.callback_query_handler(callbacks.ok_data().filter(day='1', step='10'))
async def ok_day_1_step_10(call: types.CallbackQuery, user: User):
    await call.message.answer("–¢—ã –∫—Ä—É—Ç–æ–π!")
    await call.message.answer(
        "–ê –≤–æ—Ç –∏ –ø–µ—Ä–≤–æ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ - –µ–≥–æ –≤–∞–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å, –ø—É—Å—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π –Ω–µ–±–æ–ª—å—à–æ–π —à–∞–≥ –Ω–∞ –ø—É—Ç–∏ "
        "–∫ –±–æ–ª—å—à–æ–π –º–µ—á—Ç–µ. –ó–¥–µ—Å—å —Ç—ã —Å—Ç–∞–≤–∏—à—å —Å–≤–æ–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ, ‚Äú–æ–∑–≤—É—á–∏–≤–∞–µ—à—å‚Äù –µ–≥–æ, –∞ –∑–Ω–∞—á–∏—Ç, —Ç–≤–æ–π –º–æ–∑–≥ "
        "–≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç —ç—Ç–æ –Ω–µ –∫–∞–∫ —á—Ç–æ-—Ç–æ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–µ, –∞ —Ç–æ–∂–µ –≤–∏–¥–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ü–µ–ª—å.\n"
        "–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—ã –ø–æ–ª—É—á–∏—à—å —á–µ–∫-–ª–∏—Å—Ç ‚Äú8 —à–∞–≥–æ–≤ –∫ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É‚Äù:"
    )
    await call.message.answer(
        "–¢–µ–±–µ –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –º–∞–ª–µ–Ω—å–∫—É—é –∞–Ω–∫–µ—Ç—É, –¥–µ–π—Å—Ç–≤—É–π\n",
        reply_markup=callbacks.link_kb('–ê–Ω–∫–µ—Ç–∞', 'https://forms.gle/rbdn2XE2qDgxCfLM9')
    )
    await call.message.answer(
        "–ü–æ—Å—Ç–∞–≤—å +, –∫–æ–≥–¥–∞ –∑–∞–ø–æ–ª–Ω–∏—à—å –∞–Ω–∫–µ—Ç—É",
        reply_markup=callbacks.ok_kb(day=1, step="10.1")
    )
    state = states.Form.waiting_form
    await state.set()

    user.state = str(states.Form.waiting_form)
    user.save()


@settings.dp.callback_query_handler(callbacks.ok_data().filter(day='1', step='10.1'), state=states.Form.waiting_form)
@settings.dp.callback_query_handler(callbacks.ok_data().filter(day='1', step='10.1'))
async def ok_day_1_step_10_1(call: types.CallbackQuery, user: User, state: FSMContext):
    await state.finish()

    user.state = None
    user.save()

    await call.message.answer(
        "–ù—É –∫–∞–∫? –≤—ã–ø–æ–ª–Ω–∏–ª? –¢–æ—á–Ω–æ-—Ç–æ—á–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª?",
        reply_markup=callbacks.ok_kb(day=1, step=11)
    )


@settings.dp.callback_query_handler(callbacks.ok_data().filter(day='1', step='11'))
async def ok_day_1_step_11(call: types.CallbackQuery, user: User):
    await answer_file(
        message=call.message,
        file_key='day_1_step_11',
        caption="–¢—ã –º–æ–ª–æ–¥–µ—Ü, —á—Ç–æ —Å–¥–µ–ª–∞–ª —à–∞–≥ –≤–ø–µ—Ä–µ–¥ - –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ —Å–ª–æ–∂–Ω–æ–≥–æ, –ø—Ä–∞–≤–¥–∞ –∂–µ? –ó–∞ —ç—Ç–æ —è –∫–∞–∫ –∏ –æ–±–µ—â–∞–ª–∞, –ø—Ä–∏—Å—ã–ª–∞—é "
        "—Ç–µ–±–µ –≥–∞–π–¥ –∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –º—ã –æ—Ç–¥—ã—Ö–∞–µ–º, –¥–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á –∑–∞–≤—Ç—Ä–∞!",
    )
    if user.day_number == 1:
        user.is_waiting_next_day = True
        user.start_waiting_next_day_at = dt.now().timestamp()
        user.save()


@settings.dp.callback_query_handler(callbacks.ok_data().filter(day='2', step='4'))
async def ok_day_2_step_4(call: types.CallbackQuery, user: User):
    await call.message.answer("–°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ—Ä–∏–º —ç—Ç–æ üë©‚Äçüéì –ù–∞–ø–∏—à–∏ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å–≤–æ–π –≥–ª–∞–≤–Ω—ã–π –∏–Ω—Å–∞–π—Ç –∏ –ø–æ–ª—å–∑—É –ø–æ—Å–ª–µ "
                              "–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–æ–≥–æ –≤–∏–¥–µ–æ")

    state = states.Form.waiting_inside
    await state.set()

    user.state = str(states.Form.waiting_inside)
    user.save()


@settings.dp.message_handler(state=states.Form.waiting_inside)
async def enter_inside(message: types.Message, user: User, state: FSMContext):
    await state.finish()

    user.state = None
    user.inside = message.text
    user.save()

    await message.answer(
        "–í–æ—Ç —ç—Ç–æ –¥–∞! –í–∏–∂—É, —Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–º–æ—Ç—Ä–µ–ª, –∞ –∑–Ω–∞—á–∏—Ç, —Ç—ã –µ—â–µ –±–ª–∏–∂–µ –Ω–∞ –ø—É—Ç–∏ –∫ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é! "
        "–£—Ä–∞!\n–ú—ã —Å —Ç–æ–±–æ–π –Ω–∞ –æ–¥–Ω–æ–π –≤–æ–ª–Ω–µ!",
        reply_markup=callbacks.ok_kb(day=2, step=6)
    )


@settings.dp.callback_query_handler(callbacks.ok_data().filter(day='2', step='6'))
async def ok_day_2_step_6(call: types.CallbackQuery, user: User):
    await call.message.answer(
        "–ù—É —á—Ç–æ - –≥–æ—Ç–æ–≤ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –Ω–æ–≤–æ–≥–æ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è? –¢–æ–≥–¥–∞ –Ω–∞–ø–∏—à–∏ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ 3 –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã "
        "—Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –¥–µ–ª–∞—Ç—å –Ω–∞ –ø—É—Ç–∏ –∫ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é, –∏ –∫–∞–∫—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π –≤—ã–±–∏—Ä–∞–µ—à—å?"
    )

    state = states.Form.waiting_three_things
    await state.set()

    user.state = str(states.Form.waiting_three_things)
    user.save()


@settings.dp.message_handler(state=states.Form.waiting_three_things)
async def enter_three_things(message: types.Message, user: User, state: FSMContext):
    await state.finish()

    user.state = None
    user.lesson_benefits = message.text
    user.save()

    await message.answer(
        "–í–æ—Ç —ç—Ç–æ –º–æ—â–Ω–æ! –¢—ã –±–æ–ª—å—à–æ–π –º–æ–ª–æ–¥–µ—Ü, —Ç–≤–æ–∏ —Å—Ç–∞—Ä–∞–Ω–∏—è –≤–∏–¥–Ω—ã –Ω–µ–≤–æ–æ—Ä—É–∂–µ–Ω–Ω—ã–º –≤–∑–≥–ª—è–¥–æ–º, –∑–∞–≤—Ç—Ä–∞ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ "
        "–æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å. –ò –∑–Ω–∞–π, —á—Ç–æ —è –æ—á–µ–Ω—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —Ç–µ–±—è!"
    )
    await answer_file(
        message=message,
        file_key='day_2_step_8',
        caption="–ê –ø–æ—Ç–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª—è—é —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–∫—Ä–æ–≤–∏—â–µ - –≥–∞–π–¥ ‚Äú–∫–∞–∫ —É—Å–∏–ª–∏—Ç—å –ª–∏—á–Ω—ã–π –±—Ä–µ–Ω–¥‚Äù",
    )
    await asyncio.sleep(60 * 10)
    await message.answer("–ú–µ–∂–¥—É –ø—Ä–æ—á–∏–º , –ª–µ—Ç–æ - —Å–∞–º–æ–µ —É–¥–∞—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É—Å–∏–ª–∏–≤–∞—Ç—å —Å–≤–æ–π –ª–∏—á–Ω—ã–π –±—Ä–µ–Ω–¥! "
                         "–≠—Ç–æ —Ç–≤–æ–π —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç —Å–¥–µ–ª–∞—Ç—å –∏–∑ —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞, "
                         "–¥–∞–∂–µ –µ—Å–ª–∏ —Ç–≤–æ–∏ –æ—Ü–µ–Ω–∫–∏ –¥–∞–ª–µ–∫–∏ –æ—Ç –∏–¥–µ–∞–ª–∞ üöÄ")
    await asyncio.sleep(60)
    await message.answer("–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ –ø—Ä–æ—Ü–µ—Å—Å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ –ø—Ä–æ —É—Å–∏–ª–µ–Ω–∏—è –ª–∏—á–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞? "
                         "–¢–æ–≥–¥–∞ –ø—Ä–∏–≥–ª–∞—à–∞—é —Ç–µ–±—è –≤ –Ω–∞—à —Ç–≥-–∫–∞–Ω–∞–ª, –≥–¥–µ —è –∫–∞–∫ —Ä–∞–∑ –ø–æ–¥–Ω–∏–º–∞—é –≤—Å–µ —ç—Ç–∏ —Ç–µ–º—ã –∏ –≥–¥–µ —Ç—ã –Ω–∞–π–¥–µ—à—å "
                         "—Ç–∞–∫–æ–µ –∂–µ –∑–∞—Ä—è–∂–µ–Ω–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: https://t.me/+bAXZl02t3aAwODA6   üíó –∞ –≤—Å–µ –º—ã –∑–Ω–∞–µ–º, –∫–∞–∫ "
                         "–≤–∞–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ —ç—Ç–æ–º –ø—É—Ç–∏, —Ç–∞–∫ —á—Ç–æ –∂–¥—É —Ç–µ–±—è, –º–æ–π –¥–æ—Ä–æ–≥–æ–π —à–ø–∏–æ–Ω! –ù—É –∏ –∂–¥—É —Ç–µ–±—è –∑–∞–≤—Ç—Ä–∞, "
                         "–≤ —ç—Ç–æ–º –∂–µ –º–µ—Å—Ç–µ, –≤ —ç—Ç–æ –∂–µ –≤—Ä–µ–º—è!")

    if user.day_number == 2:
        user.is_waiting_next_day = True
        user.start_waiting_next_day_at = dt.now().timestamp()
        user.save()


@settings.dp.callback_query_handler(callbacks.yes_no_data().filter(action='yes', day='3', step='6'))
async def yes_day_3_step_6(call: types.CallbackQuery, user: User):
    await call.message.answer("–û—Ç–ª–∏—á–Ω–æ! –¢—ã —Å–¥–µ–ª–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä, —É —Ç–µ–±—è –≤–ø–µ—Ä–µ–¥–∏ –ø—Ä–æ—Å—Ç–æ –æ–≥—Ä–æ–º–Ω–æ–µ –±—É–¥—É—â–µ–µ, —è —É–∂–µ "
                              "—ç—Ç–æ —á—É–≤—Å—Ç–≤—É—é üöÄüöÄüöÄ —Ç—ã —Å–¥–µ–ª–∞–ª –±–æ–ª—å—à–µ, —á–µ–º –±–û–ª—å—à–∞—è —á–∞—Å—Ç—å –ª—é–¥–µ–π, –∫—Ç–æ —Ç–æ–∂–µ –º–µ—á—Ç–∞–µ—Ç —É—á–∏—Ç—å—Å—è "
                              "–∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π, –∞ –∑–Ω–∞—á–∏—Ç, –≤—Å–µ –ø—Ä–µ–≥—Ä–∞–¥—ã –Ω–∏–ø–æ—á–µ–º, –≤–µ—Ä–Ω–æ?\n"
                              "–°–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ—Ç—Å—è –º–æ—è –∫–æ–º–∞–Ω–¥–∞, –æ–∂–∏–¥–∞–π ‚ú®")

    await call.message.answer("–ó–∞ —Ç–≤–æ–∏ —á–µ—Å—Ç–Ω—ã–µ —Å—Ç–∞—Ä–∞–Ω–∏—è –∏ –Ω–µ–ø–æ–¥–¥–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å —è –æ—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ–±–µ –µ—â–µ 2 –Ω–∞—à–∏—Ö "
                              "—Å–æ–∫—Ä–æ–≤–∏—â–∞! –ò —Ç—ã —Å–æ–±–∏—Ä–∞–µ—à—å —Ü–µ–ª—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é!!\n"
                              "–ú–Ω–µ –¥–∞–∂–µ —Å—Ç—Ä–∞—à–Ω–æ, –æ—Ç —Ç–∞–∫–æ–≥–æ –Ω–∞–ø–æ—Ä–∞ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ üöÄ")

    await answer_file(
        message=call.message,
        file_key='day_3_step_6_1'
    )

    await answer_file(
        message=call.message,
        file_key='day_3_step_6_2'
    )

    user.is_agree_with_free_cons = True
    user.day_number = 3
    user.save()


@settings.dp.callback_query_handler(callbacks.yes_no_data().filter(action='no', day='3', step='6'))
async def no_day_3_step_6(call: types.CallbackQuery, user: User):
    await call.message.answer("–û—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ —Ç—ã –Ω–µ —Ö–æ—á–µ—à—å –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ :( –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –Ω–∏ –∫ —á–µ–º—É –Ω–µ –æ–±—è–∑—ã–≤–∞–µ—Ç, –∏ —Ç—ã "
                              "–≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º:  https://t.me/CAcademy_team –ù–æ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —ç—Ç–æ, —Ç—ã —É–∂–µ "
                              "–ø—Ä–æ—à–µ–ª –±–æ–ª—å—à–æ–π –ø—É—Ç—å –∏ —Å—Ç–∞–ª –º–æ–∏–º –Ω–∞–ø–∞—Ä–Ω–∏–∫–æ–º üòâ –∞ –∑–Ω–∞—á–∏—Ç, –∫–∞–∫ –∏ –æ–±–µ—â–∞–ª–∞, "
                              "—Ç—ã –¥–æ—Å—Ç–æ–∏–Ω –µ—â–µ 2—É—Ö —Å–æ–∫—Ä–æ–≤–∏—â üî•")

    await call.message.answer("–ó–∞ —Ç–≤–æ–∏ —á–µ—Å—Ç–Ω—ã–µ —Å—Ç–∞—Ä–∞–Ω–∏—è –∏ –Ω–µ–ø–æ–¥–¥–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å —è –æ—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ–±–µ –µ—â–µ 2 –Ω–∞—à–∏—Ö "
                              "—Å–æ–∫—Ä–æ–≤–∏—â–∞! –ò —Ç—ã —Å–æ–±–∏—Ä–∞–µ—à—å —Ü–µ–ª—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é!!\n"
                              "–ú–Ω–µ –¥–∞–∂–µ —Å—Ç—Ä–∞—à–Ω–æ, –æ—Ç —Ç–∞–∫–æ–≥–æ –Ω–∞–ø–æ—Ä–∞ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ üöÄ")

    await answer_file(
        message=call.message,
        file_key='day_3_step_6_1'
    )

    await answer_file(
        message=call.message,
        file_key='day_3_step_6_2'
    )

    user.day_number = 3
    user.save()


@settings.dp.message_handler(filters.IsAdminFilter(), commands=['run_schedule'])
async def run_schedule(message: types.Message):
    await message.answer('–ù–∞—á–∏–Ω–∞—é –∑–∞–ø—É—Å–∫ —Ç–∞—Å–∫–æ–≤')

    await services.day_2_hi_message()
    await services.day_2_lesson_message()
    await services.day_2_ask_message()

    await services.remember()

    await services.day_3_hi_message()
    await services.day_3_hi_message_2()
    await services.day_3_hi_message_3()

    await message.answer('–¢–∞–∫—Å–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã')
