from aiogram import types
from aiogram.types import InputFile
from aioschedule import (
    every as schedule_every,
    run_pending as schedule_run_pending,
)
from asyncio import sleep as asleep

import callbacks
import states
from settings import settings
from db import User


async def answer_photo(message: types.Message, file_key, caption, **kwargs):
    file = settings.files[file_key]
    if file['id'] is None:
        input_file = InputFile(file['path'])
    else:
        input_file = file['id']

    message: types.Message = await message.answer_photo(input_file, caption=caption, **kwargs)
    if file['id'] is None:
        file['id'] = message.photo[0].file_id


async def answer_file(message: types.Message, file_key, caption, **kwargs):
    file = settings.files[file_key]
    if file['id'] is None:
        input_file = InputFile(file['path'])
    else:
        input_file = file['id']

    message: types.Message = await message.answer_document(input_file, caption=caption, **kwargs)
    if file['id'] is None:
        file['id'] = message.document.file_id


async def run_schedule():
    schedule_every().day.at("12:30").do(day_2_hi_message)
    schedule_every().day.at("12:31").do(day_2_lesson_message)
    schedule_every().day.at("12:55").do(day_2_ask_message)

    schedule_every(15).minutes.do(remember)

    schedule_every().day.at("12:30").do(day_3_hi_message)
    schedule_every().day.at("12:31").do(day_3_hi_message_2)
    schedule_every().day.at("12:32").do(day_3_hi_message_3)

    while True:
        await schedule_run_pending()
        await asleep(15)


async def day_2_hi_message():
    for user in User.get_all():
        if user.day_number == 1 and user.is_waiting_next_day:
            await settings.bot.send_message(
                chat_id=user.chat_id,
                text="–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, –±—É–¥—É—â–∏–π —Å—Ç—É–¥–µ–Ω—Ç –∑–∞—Ä—É–±–µ–∂–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞! –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? "
                     "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞—à–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ üòâ –Ω–∞–¥–µ—é—Å—å, —Ç—ã –ø–æ–ª–æ–Ω —Å–∏–ª!"
            )


async def day_2_lesson_message():
    for user in User.get_all():
        if user.day_number == 1 and user.is_waiting_next_day:
            await settings.bot.send_message(
                chat_id=user.chat_id,
                text="–ê –≤–æ—Ç —É–∂–µ –≥–æ—Ç–æ–≤—ã–π –≤—Ç–æ—Ä–æ–π —É—Ä–æ–∫ –Ω–∞ –æ—á–µ—Ä–µ–¥–∏."
            )
            await settings.bot.send_message(
                chat_id=user.chat_id,
                text="–Ø —Ä–∞–¥–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π –∏ –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ –≤—Å–∫–æ—Ä–µ —Ç—ã —Å–º–æ–∂–µ—à—å —Ç–∞–∫–∂–µ –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–µ–π! "
                     "–ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, –ø–æ—Å—Ç—É–ø–∏—Ç—å –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –±–µ—Å–ø–ª–∞—Ç–Ω–æ –≤–ø–æ–ª–Ω–µ —Ä–µ–∞–ª—å–Ω–æ, –∏ —è —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ —É —Ç–µ–±—è "
                     "—Ç–æ–∂–µ –ø–æ–ª—É—á–∏—Ç—Å—è! –°–∫–æ—Ä–µ–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∏ —Å–º–æ—Ç—Ä–∏",
                reply_markup=callbacks.link_kb('–°—Å—ã–ª–∫–∞', 'https://youtu.be/h4qsFt1g20Y')
            )


async def day_2_ask_message():
    for user in User.get_all():
        if user.day_number == 1 and user.is_waiting_next_day:
            await settings.bot.send_message(
                chat_id=user.chat_id,
                text="–ù—É –∫–∞–∫? –£–¥–∞–ª–æ—Å—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–µ –≤–∏–¥–µ–æ? –¢–æ—á–Ω–æ —Å–º–æ—Ç—Ä–µ–ª –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ?",
                reply_markup=callbacks.ok_kb(day=2, step=4)
            )
            user.day_number = 2
            user.is_waiting_next_day = False
            user.save()


async def remember():
    for user in User.get_all():
        if user.day_number == 2 and user.state in (str(states.Form.waiting_inside), str(states.Form.waiting_three_things)):
            await settings.bot.send_message(
                chat_id=user.chat_id,
                text="–¢–∞–∫-—Ç–∞–∫, –Ω–µ –≤–∏–∂—É —Ç–≤–æ–µ–≥–æ –∏–Ω—Å–∞–π—Ç–∞ :( –Ω–µ—É–∂–µ–ª–∏ —Ç–µ–±–µ –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ –∂–¥–µ—Ç —Ç–µ–±—è –≤ –∫–æ–Ω—Ü–µ?",
            )
        if user.day_number == 1 and user.state == str(states.Form.waiting_form):
            await settings.bot.send_message(
                chat_id=user.chat_id,
                text="–ù–µ –∑–∞–±—ã–ª? –ü–æ—Å—Ç–∞–≤—å +, –∫–æ–≥–¥–∞ –∑–∞–ø–æ–ª–Ω–∏—à—å –∞–Ω–∫–µ—Ç—É",
                reply_markup=callbacks.ok_kb(day=1, step="10.1")
            )


async def day_3_hi_message():
    for user in User.get_all():
        if user.day_number == 2 and user.state is None and user.is_waiting_next_day:
            await settings.bot.send_message(
                chat_id=user.chat_id,
                text="–ù—É —á—Ç–æ, —è –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∞ —Ç–≤–æ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ! –¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É—Å–≤–æ–∏–ª –º–∞—Ç–µ—Ä–∏–∞–ª, –Ω–æ, –∫–æ–Ω–µ—á–Ω–æ, "
                     "–µ—Å—Ç—å –º–Ω–æ–≥–æ —á–µ–≥–æ, —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–¥–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å!"
            )
            await settings.bot.send_message(
                chat_id=user.chat_id,
                text="–í–æ-–ø–µ—Ä–≤—ã—Ö, –Ω–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ —Ç–≤–æ–π –ø–ª–∞–Ω –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –≤—ã—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è —Ü–µ–ª–æ—Å—Ç–Ω–æ–π "
                     "—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –∫—É–¥–∞ –≤–∫–ª—é—á–µ–Ω—ã —Ç–∞–±–ª–∏—Ü–∞ —Å–æ –≤—Å–µ–º–∏ –¥–µ–¥–ª–∞–π–Ω–∞–º–∏, –¥–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ –ø—É—Ç–∏, –ø–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç –∏ –∞–Ω–∞–ª–∏–∑ "
                     "–ø—Ä–æ–≥—Ä–∞–º–º –∏ —Å—Ç–∏–ø–µ–Ω–¥–∏–π, –∞ —Ç–∞–∫–∂–µ –¥–µ–Ω–µ–∂–Ω–∞—è –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è ! –ö–∞–∫ —Ä–∞–∑ –≤—Å–µ —ç—Ç–æ - –Ω–∞—à —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –≤ "
                     "—Ä–∞–±–æ—Ç–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏."
            )


async def day_3_hi_message_2():
    for user in User.get_all():
        if user.day_number == 2 and user.state is None and user.is_waiting_next_day:
            await settings.bot.send_message(
                chat_id=user.chat_id,
                text="–í–æ-–≤—Ç–æ—Ä—ã—Ö, —Å–¥–µ–ª–∞–π —É–ø–æ—Ä –Ω–∞ —Å–≤–æ–π –ª–∏—á–Ω—ã–π –±—Ä–µ–Ω–¥. –¢—É—Ç —Ö–æ—Ä–æ—à–æ –±—ã –∏–º–µ—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π "
                     "–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –Ω–æ –∏ —Å–æ—Ü–∏–æ-–∫—É–ª—å—Ç—É—Ä–Ω—ã–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç—É—Ç –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å  –≤–µ—Å—Ç–∏ —Å–≤–æ–π –±–ª–æ–≥, –∑–∞–Ω—è—Ç—å—Å—è "
                     "–≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ–º, –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç –∏ –º–Ω–æ–≥–æ —á–µ–≥–æ –µ—â–µ."
            )


async def day_3_hi_message_3():
    for user in User.get_all():
        if user.day_number == 2 and user.state is None and user.is_waiting_next_day:
            await settings.bot.send_message(
                chat_id=user.chat_id,
                text="–ï—Å–ª–∏ —Ç—ã –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –∏ —Ö–æ—á–µ—à—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–≥–ª—É–±–∏—Ç—Å—è –≤ —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∏ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å —Å–≤–æ—é "
                     "–º–µ—á—Ç—É, —Ç–æ –ø—Ä–∏–≥–ª–∞—à–∞—é —Ç–µ–±—è –Ω–∞ –ë–ï–°–ü–õ–ê–¢–ù–£–Æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –≥–¥–µ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–º–æ–∂–µ—Ç –æ—Ü–µ–Ω–∏—Ç—å —Ç–≤–æ–∏ "
                     "—à–∞–Ω—Å—ã –∏ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏! –Ω—É –∫–∞–∫, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ª–∏ —Ç–µ–±–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –Ω–∞–ø–∞—Ä–Ω–∏–∫?",
                reply_markup=callbacks.yes_no_kb(day=3, step=6)
            )
            user.is_waiting_next_day = False
            user.save()
